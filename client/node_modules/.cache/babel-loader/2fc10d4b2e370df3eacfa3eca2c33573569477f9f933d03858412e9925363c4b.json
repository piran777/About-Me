{"ast":null,"code":"import React from 'react';\nimport { useThemeUI, ThemeProvider as ThemeProvider$1, jsx as jsx$1, __themeUiDefaultContextValue } from '@theme-ui/core';\nimport { css } from '@theme-ui/css';\nimport { ColorModeProvider } from '@theme-ui/color-modes';\nimport { Global } from '@emotion/react';\nimport { jsx, jsxs } from '@theme-ui/core/jsx-runtime';\nconst RootStyles = () => jsx$1(Global, {\n  styles: emotionTheme => {\n    const theme = emotionTheme;\n    const {\n      useRootStyles\n    } = theme.config || theme;\n    if (useRootStyles === false || theme.styles && !theme.styles.root) {\n      return null;\n    }\n    const boxSizing = theme.config?.useBorderBox === false ? undefined : 'border-box';\n    return css({\n      '*': {\n        boxSizing\n      },\n      html: {\n        variant: 'styles.root'\n      },\n      body: {\n        margin: 0\n      }\n    })(theme);\n  }\n});\nconst ThemeUIProvider = ({\n  theme,\n  children\n}) => {\n  const outer = useThemeUI();\n  const isTopLevel = outer === __themeUiDefaultContextValue;\n  return jsx(ThemeProvider$1, {\n    theme: theme,\n    children: jsxs(ColorModeProvider, {\n      children: [isTopLevel && jsx(RootStyles, {}), children]\n    })\n  });\n};\n\n/** @deprecated ThemeProvider is now called ThemeUIProvider to reduce confusion with Emotion */\nconst ThemeProvider = ({\n  theme,\n  children\n}) => {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('[theme-ui] The export ThemeProvider is deprecated and is now called ThemeUIProvider to reduce confusion with Emotion. Please update your import; ThemeProvider will be removed in a future version.');\n    }\n  }, []);\n  const outer = useThemeUI();\n  const isTopLevel = outer === __themeUiDefaultContextValue;\n  return jsx(ThemeProvider$1, {\n    theme: theme,\n    children: jsxs(ColorModeProvider, {\n      children: [isTopLevel && jsx(RootStyles, {}), children]\n    })\n  });\n};\nexport { ThemeProvider, ThemeUIProvider };","map":{"version":3,"names":["React","useThemeUI","ThemeProvider","ThemeProvider$1","jsx","jsx$1","__themeUiDefaultContextValue","css","ColorModeProvider","Global","jsxs","RootStyles","styles","emotionTheme","theme","useRootStyles","config","root","boxSizing","useBorderBox","undefined","html","variant","body","margin","ThemeUIProvider","children","outer","isTopLevel","useEffect","process","env","NODE_ENV","console","warn"],"sources":["C:/Users/piran/OneDrive/About-Me/client/node_modules/@theme-ui/theme-provider/dist/theme-ui-theme-provider.esm.js"],"sourcesContent":["import React from 'react';\nimport { useThemeUI, ThemeProvider as ThemeProvider$1, jsx as jsx$1, __themeUiDefaultContextValue } from '@theme-ui/core';\nimport { css } from '@theme-ui/css';\nimport { ColorModeProvider } from '@theme-ui/color-modes';\nimport { Global } from '@emotion/react';\nimport { jsx, jsxs } from '@theme-ui/core/jsx-runtime';\n\nconst RootStyles = () => jsx$1(Global, {\n  styles: emotionTheme => {\n    const theme = emotionTheme;\n    const {\n      useRootStyles\n    } = theme.config || theme;\n    if (useRootStyles === false || theme.styles && !theme.styles.root) {\n      return null;\n    }\n    const boxSizing = theme.config?.useBorderBox === false ? undefined : 'border-box';\n    return css({\n      '*': {\n        boxSizing\n      },\n      html: {\n        variant: 'styles.root'\n      },\n      body: {\n        margin: 0\n      }\n    })(theme);\n  }\n});\nconst ThemeUIProvider = ({\n  theme,\n  children\n}) => {\n  const outer = useThemeUI();\n  const isTopLevel = outer === __themeUiDefaultContextValue;\n  return jsx(ThemeProvider$1, {\n    theme: theme,\n    children: jsxs(ColorModeProvider, {\n      children: [isTopLevel && jsx(RootStyles, {}), children]\n    })\n  });\n};\n\n/** @deprecated ThemeProvider is now called ThemeUIProvider to reduce confusion with Emotion */\nconst ThemeProvider = ({\n  theme,\n  children\n}) => {\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('[theme-ui] The export ThemeProvider is deprecated and is now called ThemeUIProvider to reduce confusion with Emotion. Please update your import; ThemeProvider will be removed in a future version.');\n    }\n  }, []);\n  const outer = useThemeUI();\n  const isTopLevel = outer === __themeUiDefaultContextValue;\n  return jsx(ThemeProvider$1, {\n    theme: theme,\n    children: jsxs(ColorModeProvider, {\n      children: [isTopLevel && jsx(RootStyles, {}), children]\n    })\n  });\n};\n\nexport { ThemeProvider, ThemeUIProvider };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,aAAa,IAAIC,eAAe,EAAEC,GAAG,IAAIC,KAAK,EAAEC,4BAA4B,QAAQ,gBAAgB;AACzH,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASL,GAAG,EAAEM,IAAI,QAAQ,4BAA4B;AAEtD,MAAMC,UAAU,GAAGA,CAAA,KAAMN,KAAK,CAACI,MAAM,EAAE;EACrCG,MAAM,EAAEC,YAAY,IAAI;IACtB,MAAMC,KAAK,GAAGD,YAAY;IAC1B,MAAM;MACJE;IACF,CAAC,GAAGD,KAAK,CAACE,MAAM,IAAIF,KAAK;IACzB,IAAIC,aAAa,KAAK,KAAK,IAAID,KAAK,CAACF,MAAM,IAAI,CAACE,KAAK,CAACF,MAAM,CAACK,IAAI,EAAE;MACjE,OAAO,IAAI;IACb;IACA,MAAMC,SAAS,GAAGJ,KAAK,CAACE,MAAM,EAAEG,YAAY,KAAK,KAAK,GAAGC,SAAS,GAAG,YAAY;IACjF,OAAOb,GAAG,CAAC;MACT,GAAG,EAAE;QACHW;MACF,CAAC;MACDG,IAAI,EAAE;QACJC,OAAO,EAAE;MACX,CAAC;MACDC,IAAI,EAAE;QACJC,MAAM,EAAE;MACV;IACF,CAAC,CAAC,CAACV,KAAK,CAAC;EACX;AACF,CAAC,CAAC;AACF,MAAMW,eAAe,GAAGA,CAAC;EACvBX,KAAK;EACLY;AACF,CAAC,KAAK;EACJ,MAAMC,KAAK,GAAG1B,UAAU,CAAC,CAAC;EAC1B,MAAM2B,UAAU,GAAGD,KAAK,KAAKrB,4BAA4B;EACzD,OAAOF,GAAG,CAACD,eAAe,EAAE;IAC1BW,KAAK,EAAEA,KAAK;IACZY,QAAQ,EAAEhB,IAAI,CAACF,iBAAiB,EAAE;MAChCkB,QAAQ,EAAE,CAACE,UAAU,IAAIxB,GAAG,CAACO,UAAU,EAAE,CAAC,CAAC,CAAC,EAAEe,QAAQ;IACxD,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;;AAED;AACA,MAAMxB,aAAa,GAAGA,CAAC;EACrBY,KAAK;EACLY;AACF,CAAC,KAAK;EACJ1B,KAAK,CAAC6B,SAAS,CAAC,MAAM;IACpB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCC,OAAO,CAACC,IAAI,CAAC,qMAAqM,CAAC;IACrN;EACF,CAAC,EAAE,EAAE,CAAC;EACN,MAAMP,KAAK,GAAG1B,UAAU,CAAC,CAAC;EAC1B,MAAM2B,UAAU,GAAGD,KAAK,KAAKrB,4BAA4B;EACzD,OAAOF,GAAG,CAACD,eAAe,EAAE;IAC1BW,KAAK,EAAEA,KAAK;IACZY,QAAQ,EAAEhB,IAAI,CAACF,iBAAiB,EAAE;MAChCkB,QAAQ,EAAE,CAACE,UAAU,IAAIxB,GAAG,CAACO,UAAU,EAAE,CAAC,CAAC,CAAC,EAAEe,QAAQ;IACxD,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAED,SAASxB,aAAa,EAAEuB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}